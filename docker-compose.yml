version: '3.8'

services:
  auth-service:
    image: bfury0329/auth-service
    build: ./auth-service
    ports:
      - "5001:5001"
    environment:
      - DATABASE_URL=postgresql://postgres:1997Zanahoria@database-1.cl1ivajgoftg.us-west-2.rds.amazonaws.com:5432/postgres
      - SQLALCHEMY_TRACK_MODIFICATIONS=true
      - SECRET_KEY=mysecretkey
    networks:
      - microservices-network

  catalog-service:
    image: bfury0329/catalog-service
    build: ./catalog-service
    ports:
      - "5003:5003"
    environment:
      - MONGO_URI=mongodb+srv://MicroserviceDev:1997999@cluster0.hdqpd.mongodb.net/CatalogServiceDB?retryWrites=true&w=majority
      - SECRET_KEY=mysecretkey
    networks:
      - microservices-network

  session-service:
    image: bfury0329/session-service
    build: ./session-service
    ports:
      - "5004:5004"
    environment:
      - MONGO_URI=mongodb+srv://MicroserviceDev:1997999@cluster0.hdqpd.mongodb.net/CatalogServiceDB?retryWrites=true&w=majority
      - PORT=5004
    networks:
      - microservices-network

  interface-service:
    image: bfury0329/interface-service
    build: ./interface-service
    ports:
      - "8080:8080"
    environment:
      - AUTH_SERVICE_URL=http://auth-service:5001
      - CATALOG_SERVICE_URL=http://catalog-service:5003
      - SESSION_SERVICE_URL=http://session-service:5004
      - USER_SERVICE_URL=http://user-service:5002
    networks:
      - microservices-network

  user-service:
    image: bfury0329/user-service
    build: ./user-service
    ports:
      - "5002:5002"
    environment:
      - POSTGRESQL_HOST=database-1.cl1ivajgoftg.us-west-2.rds.amazonaws.com
      - POSTGRESQL_PORT=5432
      - POSTGRESQL_DATABASE=postgres
      - POSTGRESQL_USER=postgres
      - POSTGRESQL_PASSWORD=1997Zanahoria
    networks:
      - microservices-network

  nginx:
    image: nginx:latest
    ports:
      - "80:80" 
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - auth-service
      - catalog-service
      - session-service
      - interface-service
      - user-service
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge
